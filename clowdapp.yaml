---
apiVersion: v1
kind: Template
metadata:
  name: ros-ocp-backend
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: ros-ocp-backend
  spec:
    envName: ${ENV_NAME}
    dependencies:
    - ingress
    deployments:
    - name: processor
      replicas: ${{PROCESSOR_REPLICA_COUNT}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        command: ["sh"]
        args: ["-c", "./rosocp db migrate up && ./rosocp start processor"]
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        env:
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: KRUIZE_HOST
            value: ${KRUIZE_HOST}
          - name: KRUIZE_PORT
            value: ${KRUIZE_PORT}
          - name: KRUIZE_WAIT_TIME
            value: ${KRUIZE_WAIT_TIME}
    - name: recommender
      replicas: ${{RECOMMENDER_REPLICA_COUNT}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        command: ["sh"]
        args: ["-c", "./rosocp db migrate up && ./rosocp start recommender"]
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        env:
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: KRUIZE_HOST
            value: ${KRUIZE_HOST}
          - name: KRUIZE_PORT
            value: ${KRUIZE_PORT}
          - name: KRUIZE_WAIT_TIME
            value: ${KRUIZE_WAIT_TIME}
    - name: api
      replicas: ${{API_REPLICA_COUNT}}
      webServices:
        public:
          enabled: true
          apiPath: cost-management
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        command: ["sh"]
        args: ["-c", "./rosocp db migrate up && ./rosocp start api"]
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/cost-management/v1/recommendations/openshift/openapi.json
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /api/cost-management/v1/recommendations/openshift/openapi.json
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        env:
          - name: PATH_PREFIX
            value: /api
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: ENABLE_RBAC
            value: "${ENABLE_RBAC}"
          - name: DB_POOL_SIZE
            value: ${DB_POOL_SIZE}
          - name: DB_MAX_OVERFLOW
            value: ${DB_MAX_OVERFLOW}
          - name: SSL_CERT_DIR
            value: ${SSL_CERT_DIR}
    - name: kruize
      replicas: 1
      webServices:
        private:
          enabled: true
      podSpec:
        image: ${KRUIZE_IMAGE}:${KRUIZE_IMAGE_TAG}
        command: ["sh"]
        args: ["-c", "export CONFIG_FILE=${ACG_CONFIG} && bash target/bin/Autotune"]
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        env:
          - name: AUTOTUNE_SERVER_PORT
            value: ${KRUIZE_PORT}
          - name: CLUSTER_TYPE
            value: "kubernetes"
          - name: K8S_TYPE
            value: "openshift"
          - name: AUTH_TYPE
            value: ""
          - name: AUTH_TOKEN
            value: ""
          - name: MONITORING_AGENT
            value: "prometheus"
          - name: MONITORING_SERVICE
            value: "prometheus-k8s"
          - name: MONITORING_AGENT_ENDPOINT
            value: "prometheus-k8s"
          - name: LOGGING_LEVEL
            value: "info"
          - name: ROOT_LOGGING_LEVEL
            value: "info"
          - name: DB_DRIVER
            value: "jdbc:postgresql://"
    database:
      name: rosocp
      version: 13
    kafkaTopics:
      - topicName: hccm.ros.events
        partitions: 1
      - topicName: rosocp.kruize.experiments
        partitions: 1

parameters:
- description : ClowdEnvironment name
  name: ENV_NAME
  required: true
- description: Replica count for processor pod
  name: PROCESSOR_REPLICA_COUNT
  value: "1"
- description: Image NAME
  name: IMAGE
  required: true
  value: quay.io/cloudservices/ros-ocp-backend
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Kruize image name
  name: KRUIZE_IMAGE
  required: true
  value: quay.io/cloudservices/autotune
- description: Kruize image tag
  name: KRUIZE_IMAGE_TAG
  required: true
- description: Kruize server host
  name: KRUIZE_HOST
  required: true
  value: "ros-ocp-backend-kruize"
- description: Kruize server port
  name: KRUIZE_PORT
  required: true
  value: "10000"
- description: Initial cpu request.
  displayName: CPU Request
  name: CPU_REQUEST
  required: true
  value: 500m
- description: Initial amount of memory the container will request.
  displayName: Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 1Gi
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Maximum amount of CPU the build container can use.
  displayName: CPU Limit
  name: CPU_LIMIT
  required: true
  value: '1'
- description: Is clowder enabled
  name: CLOWDER_ENABLED
  value: "True"
- name: SSL_CERT_DIR
  value: '/etc/ssl/certs:/etc/pki/tls/certs:/system/etc/security/cacerts:/cdapp/certs'
- description: Replica count for api pod
  name: API_REPLICA_COUNT
  value: "1"
- description: Replica count for recommender pod
  name: RECOMMENDER_REPLICA_COUNT
  value: "1"
- description: Time to wait before hitting listRecommendation API
  name: KRUIZE_WAIT_TIME
  value: "120"
